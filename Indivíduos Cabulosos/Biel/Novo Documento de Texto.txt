#include <LiquidCrystal.h>

LiquidCrystal lcd_1(2, 3, 4, 5, 6, 7);

char vogais[] = {'a', 'e', 'i', 'o', 'u'};
int ind = 0;
char vogais_selecionadas[5];
int vogais_count = 0;

#define BOTAO_NAVE 8
#define BOTAO_CONF 9

void setup() {
  Serial.begin(9600);
  lcd_1.begin(16, 2); // Inicialização do LCD com 16 colunas e 2 linhas
 

  pinMode(BOTAO_NAVE, INPUT); // Define o pino do botão de navegação como entrada
  pinMode(BOTAO_CONF, INPUT); // Define o pino do botão de confirmação como entrada

  Menu();
}


void loop()
{
  Menu();
}

void Menu()
{
  lcd_1.setCursor(3, 0); // Posiciona o cursor na primeira linha, quarta coluna
  lcd_1.print("BEM VINDO"); // Imprime "BEM VINDO" na primeira linha
  lcd_1.setCursor(2, 1); // Posiciona o cursor na segunda linha, terceira coluna
  lcd_1.print("1-PC 2-ARDU "); // Imprime "1-PC 2-ARDU" na segunda linha
  
if (digitalRead(BOTAO_NAVE) == HIGH) {
    prepararParaPC();
  }
if (digitalRead(BOTAO_CONF) == HIGH) {
    escolherVogais();
  }
}


void prepararParaPC(){   //ESPERA A MENSAGEM SER ESCRITA PELO PC 
  lcd_1.clear();
  lcd_1.print("Esperando...");
  
  // Aguarda mensagem pela porta serial
  while (!Serial.available()) {
    delay(100);
  }
  
  // Lê mensagem da porta serial
  String mensagem = Serial.readString();
  
  int index = mensagem.indexOf("\n");
  mensagem.remove(index);
    // Exibe mensagem no LCD
  lcd_1.clear();
  lcd_1.print(mensagem);
  Serial.println(mensagem);
  delay(7500);
  lcd_1.clear();
  loop();
 
}

void escolherVogais() { // ESCOLHEMOS QUIAS AS VOGAIS VAMPOS ESCREVER
  lcd_1.clear();
  lcd_1.setCursor(0, 0);
  lcd_1.print("ESCREVA");
  lcd_1.setCursor(0, 1);
  lcd_1.print(vogais[ind]);
  delay(1000);

bool escolhaConcluida = false; // Flag para indicar se a escolha das vogais foi concluída

  while (!escolhaConcluida) {
    // Verifica se o botão de navegação foi pressionado
    if (digitalRead(BOTAO_NAVE)==HIGH) {
      // Incrementa o índice
      ind= (ind + 1)%5;
  
      // Atualiza o display LCD com a nova letra
      lcd_1.setCursor(vogais_count, 1);
      lcd_1.print(vogais[ind]);
      delay(1000); // debounce
    }
    	
    // Verifica se o botão de confirmação foi pressionado
    if (digitalRead(BOTAO_CONF) == HIGH) {
      // Adiciona a letra selecionada ao vetor de letras selecionadas
     vogais_selecionadas[vogais_count] = vogais[ind];
      vogais_count++;
      lcd_1.setCursor(vogais_count, 1);
      lcd_1.print(vogais[ind]);
      
      
      // Se já foram selecionadas 5 letras, exibe na segunda linha do display
      if (vogais_count == 5) {
        lcd_1.clear();
        lcd_1.setCursor(0, 0);
        lcd_1.print("FOI ENVIADO");
        lcd_1.setCursor(0, 1);
        lcd_1.print("MSG: ");
	
        Serial.println(" ");
        for (int i = 0; i < 5; i++) {
          lcd_1.print(vogais_selecionadas[i]);
			Serial.print(vogais_selecionadas[i]);
        }
        delay(7500);
  		lcd_1.clear();
		loop();
		escolhaConcluida = true;
        
      }
      
      
      // Aguarda até que o botão seja solto para evitar múltiplas inserções
     while (digitalRead(BOTAO_CONF) == HIGH) {
        delay(100);
     }
    }
  }
for (int i = 0; i < 5; i++) {
        vogais_selecionadas[i] = '\0';
		Serial.print(vogais_selecionadas[i]);
        }	
vogais_count=0;
}
